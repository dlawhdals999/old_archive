#include "Deque.h"
#include <stdio.h>
#include <stdlib.h>

void DequeInit(Deque * pdeq) {
	pdeq->head = NULL;
	pdeq->tail = NULL;
}

int DQIsEmpty(Deque * pdeq) {
	if (pdeq->head == NULL)
		return TRUE;
	else
		return FALSE;
}

void DQAddFirst(Deque * pdeq, Data data) {
	Node* newNode = (Node*)malloc(sizeof(Node));
	newNode->data = data;

	newNode->next = pdeq->head;

	if (pdeq->head == NULL) 		
		pdeq->tail = newNode;	
	else 
		pdeq->head->prev = newNode;

	newNode->prev = NULL;	
	pdeq->head = newNode;
}

void DQAddLast(Deque * pdeq, Data data) {
	Node* newNode = (Node*)malloc(sizeof(Node));
	newNode->data = data;

	newNode->prev = pdeq->tail;

	if (pdeq->tail == NULL) 
		pdeq->head = newNode;	
	else 
		pdeq->tail->next = newNode;
		
	newNode->next = NULL;
	pdeq->tail = newNode;
}

Data DQRemoveFirst(Deque * pdeq) {
	if (DQIsEmpty(pdeq)) {
		printf("Queue memory error!");
		exit(-1);
	}
	Node* delNode = pdeq->head;
	Data rData = delNode->data;

	pdeq->head = pdeq->head->next;

	if (pdeq->head == NULL)
		pdeq->tail = NULL;
	else
		pdeq->head->prev = NULL;

	free(delNode);
	return rData;
}
Data DQRemoveLast(Deque * pdeq) {
	if (DQIsEmpty(pdeq)) {
		printf("Queue memory error!");
		exit(-1);
	}

	Node* delNode = pdeq->tail;
	Data rData = delNode->data;

	pdeq->tail = pdeq->tail->prev;

	if (pdeq->tail == NULL)
		pdeq->head = NULL;
	else
		pdeq->tail->next = NULL;

	free(delNode);
	return rData;
}

Data DQGetFirst(Deque * pdeq) {
	if (DQIsEmpty(pdeq)) {
		printf("Queue memory error!");
		exit(-1);
	}

	return pdeq->head->data;
}
Data DQGetLast(Deque * pdeq) {
	if (DQIsEmpty(pdeq)) {
		printf("Queue memory error!");
		exit(-1);
	}

	return pdeq->tail->data;
}