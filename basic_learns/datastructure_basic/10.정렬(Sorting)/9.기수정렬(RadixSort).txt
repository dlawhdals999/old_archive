#include <stdio.h>
#include "ListBaseQueue.h"

#define BUCKET_NUM 10

void RadixSort(int arr[], int num, int maxLen)
{
	Queue buckets[BUCKET_NUM];
	int bi;	//buckets idx
	int di;	//data idx
	int pos;
	int radix;
	int divfac = 1;

	//총 10개의 버킷 초기화
	for (bi = 0; bi < BUCKET_NUM; bi++) {
		QueueInit(&buckets[bi]);
	}

	//전체 버킷 추가 추출(가장 긴 데이터의 길이만큼 반복)
	for (pos = 0; pos < maxLen; pos++) {

		//버킷에 데이터 추가(정렬대상의 수 만큼)
		for (di = 0;di < num; di++) {
			radix = arr[di] / divfac % 10;
			Enqueue(&buckets[radix], arr[di]);
		}
		
		//버킷에서 데이터 추출(버킷 수만큼)		
		for (bi=0,di = 0; bi < BUCKET_NUM; bi++) {
			while(!QIsEmpty(&buckets[bi]))
				arr[di++] = Dequeue(&buckets[bi]);
		}

		//N번째 자리의 숫자 추출을 위한 피제수의 증가
		divfac *= 10;
	}
}

int main(void)
{
	int arr[7] = { 13,212,14,7141,10987,6,15 };
	int len = sizeof(arr) / sizeof(int);
	int i;

	RadixSort(arr, len, 5);

	for (i = 0; i < len; i++) {
		printf("%d ", arr[i]);
	}
	printf("\n\n");

	return 0;
}