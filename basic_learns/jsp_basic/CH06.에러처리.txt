-----------CH06. 에러처리-----------------
---------------------------------------------------------------------------------------------
//01익셉션 처리하기

/*에러를 처리 하지 않는 예제 : readParameterNoErrorPage.jsp*/

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>파라미터 출력</title>
</head>
<body>

name 파라미터 값 : <%=request.getParameter("name").toUpperCase()%>

</body>
</html>



<< 실행 결과 >>
에러페이지

=>파라미터를 읽어야하는데, 전달하지 않아서 null을 반환 => 에러
=>개발자의 입장에서는 에러 페이지는 에러를 수정할 수 있지만, 사용자 입장에서는 선호하지 않음. + 코드 노출 => 보안 위험

==>

/*try문을 이용한 에러 처리 : readParameterWithTry*/

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>파라미터 출력</title>
</head>
<body>
name 파라미터 값 : 
<% try{%>
<%=request.getParameter("name").toUpperCase() %>
<%}catch(Exception ex){ %>
name 파라미터가 올바르지 않습니다.
<%} %>
</body>
</html>

<< 실행 결과 >>
name 파라미터 값 : name 파라미터가 올바르지 않습니다. 

=>reqeust.getParameter("name") -> null반환 null.toUppserCase() <<NullPointException발생

---------------------------------------------------------------------------------------------

//02 에러페이지 지정하기

=>예외나 에러가 발생하면 따로 지정한 페이지로 넘길 수 있음

/*에러페이지로 이동하는 예제 : readParameter.jsp*/

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page errorPage="/error/viewErrorMessage.jsp" %> <!-- 익셉션이 발생하면 ""페에지를 실행 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>파라미터 출력</title>
</head>
<body>

name 파라미터 값 : <%=request.getParameter("name").toUpperCase() %>

</body>
</html>

=>page디렉티브의 errorPage 속성을 지정
=>NullPointException 이 발생하면 WAS는 자체적으로 에러 페이지를 생성하는 대신, errorPage 속성에 지정한 JSP를 실행해서
  에러 화면을 생성한다.

---------------------------------------------------------------------------------------------

//03 에러 페이지 작성하기

에러 페이지는 page 디렉티브의 isErrorPage 속성 값을 "true"로 지정해야 함.

/*에러 페에지 작성의 예제 : \error\viewErrorMessage.jsp */

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page isErrorPage="true" %>	<!-- jsp를 에러 페이지로 지정 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>에러 발생</title>
</head>
<body>

요청 처리 과정에서 에러가 발생하였습니다.<br>
빠른 시간 내에 문제를 해결하도록 하겠습니다.
<p>

에러 타입 : <%=exception.getClass().getName() %><br>	<!-- exception 기본 객체의 클래스 이름을 출력 -->
에러 메세지 : <b> <%=exception.getMessage() %> </b>		<!-- 익셉션 메세지를 출력 -->

</body>
</html>


<< 실행 결과 >> //readParameter.jsp 실행
요청 처리 과정에서 에러가 발생하였습니다.
빠른 시간 내에 문제를 해결하도록 하겠습니다. 
에러 타입 : java.lang.NullPointerException
 에러 메세지 : null 


 =>fireFox나 기타 브라우저는 위와 같이 나오지만, 익스플로러는 자체 에러 페이지나옴
(응답 상태 코드가 400,404나 500등 에러 코드이고, 전체 응답 결과 데이터의 길이가 512 바이트보다 작을때)
=>error페이지의 <!-- 에러에 대한 설명~~~ --> 을 추가해서 512바이트를 넘기면 위와같이 나옴.

---------------------------------------------------------------------------------------------

//04 응답 상태 코드별로 에러 페이지 지정하기
;에러 코드별로 사용할 에러 페이지를 web.xml 파일에 지정할 수 있음.

web.xml에
<error-page>
 <error-code>에러 코드</error-code>
 <location>에러페이지의 URL</location>
</error-page>

를 추가하면 됨.

=>페이지가 존재하지 않을 때 발생하는 404 코드 // 서버 내부 에러 500 코드를 각각 지정하는 방법
/*chap06\WEB-INF\web.xml*/

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1">
  <display-name>chap06</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <error-page>
  	<error-code>404</error-code>
  	<location>/error/error404.jsp</location>
  </error-page>
  
  <error-page>
  	<error-code>5000</error-code>
  	<location>/error/error500.jsp</location>	
  </error-page>
  
</web-app>

/*404코드 에러 페이지 작성 : \error\error404.jsp*/

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>404 에러 발생</title>
</head>
<body>

<strong>요청한 페이지는 존재하지 않습니다.</strong>
<br><br>
주소를 올바르게 입력했는지 확인해보시기 바랍니다.

</body>
<!-- 
만약 에러 페이지의 길이가 512바이트 보다 작다면 인터넷 익스플로러는 이 페이지가 출력하는
에러 페이지를 출력하지 않고, 자체적으로 제공하는 'HTTP 오류 메세지'화면을 출력한다.
-->

</html>


<<실행 결과>> <<잘못된 URL 입력 시
요청한 페이지는 존재하지 않습니다.

주소를 올바르게 입력했는지 확인해보시기 바랍니다. 


==>
개발자 입장에서 에러 코드는 도움되지만, 사용자 입장에서는 나쁜 인상을 심어 줄 수있음.
==>
P.149의 주요 응답 상태 코드 보기

---------------------------------------------------------------------------------------------

//05 익셉션 타입별로 에러 페이지 지정하기
;jsp페이지에서 발생하는 익셉션 종류별로 에러 페이지를 지정할 수도 있음.

web.xml에
<error-page>
 <exception-type>java.lang.NullPointerException</exception-type>
 <location>/error/errorNullPointer.jsp</location>
</error-page>

위와 같이 설정해주면 됨.


/*NullPointer익셉션을 처리하는 예제 : \error\errorNullPointer.jsp*/

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>NULL 에러 발생</title>
</head>
<body>

<strong>서비스 처리 과정에서 널(NULL) 에러가 발생했습니다.</strong>

</body>
</html>


/*web.xml 추가 내용*/

<error-page>
 <exception-type>java.lang.NullPointerException</exception-type>
 <location>/error/errorNullPointer.jsp</location>
</error-page>


/*에러 페이지를 지정하지 않고 실행 : readParameter2.jsp*/

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page errorPage="/error/viewErrorMessage.jsp" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>파라미터 출력</title>
</head>
<body>

name 파라미터 값 : <%=request.getParameter("name").toUpperCase() %>

</body>
</html>


<< 실행결과 >>readParameter2
서비스 처리 과정에서 널(NULL) 에러가 발생했습니다.

---------------------------------------------------------------------------------------------

//06 에러 페이지의 우선순위와 에러 페이지 지정 형태
;우선 순위
1.page 디렉티브의 errorPage 속성에 지정한 에러 페이지를 보여준다.
2.JSP페이지에서 발생한 Exception 타입이 web.xml 파일의 <exception-type>에 지정한 타입과 동일한 경우 지정한 에러 페이지를 보여준다.
3.에러 코드가 web.xml 파일의 <error-code>에 지정한 에러 코드와 동일한 경우 지정한 에러 페이지를 보여준다.
4.아무것도 해당하지 않는 경우 웹 컨테이너가 제공하는 기본 에러 페이지를 보여준다.

==>
우선 순위를 고려한 에러페이지 지정
-전용 에러 페이지가 필요한 경우 page 디렉티브의 errorPage 속성을 사용해서 에러 페이지를 지정한다.
-범용적인 에러 코드(404,500등)에 대해 web.xml에 에러 페이지를 지정한다.
-별도로 처리해야 하는 익셉션 타입(심각함을 나타내는 익셉션)에 대해서는 web.xml에 
 <exception-type> 태그를 추가해서 에러 페이지를 지정한다.

---------------------------------------------------------------------------------------------

//07 버퍼와 에러 페이지의 관계
;버퍼와 에러 페이지 관계 그림 + 내용 보기 (P152)


/*버퍼와 에러 페이지 관계 보기 : bufferOverflose.jsp*/

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page buffer="1kb' %>	<!--  버퍼 크기를 1KB로 지정 -->
<%@ page errorPage="/error/viewErrorMessage.jsp" %> <!-- 에러 페이지 지정 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>버퍼 플러시 이후 에러 발생 결과</title>
</head>
<body>
<% for(int i=0;i<300;i++) {out.println(i);} %>	<!-- 1kb를 초과하는 데이터를 출력해서 버퍼가 플러시 되도록.이 과정에서 200응답 코드가 전송 -->
<%= 1/0 %>		<!-- ArithmeticException 발생 -> errorPage로 지정한 viewErrorMessage.jsp를 사용 -->


</body>
</html>

<<실행 결과 >>
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 
38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 
72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 
105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 
131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 
157 158 159 160 161 162 163 164 165 166 167 1 요청 처리 과정에서 에러가 발생하였습니다.
빠른 시간 내에 문제를 해결하도록 하겠습니다. 
에러 타입 : java.lang.ArithmeticException
에러 메세지 : / by zero 

=>위는 168의 '1'까지 버퍼에 저장된 후 플러시 되었슴.
=>flush된 이후 나머지 부분이 버퍼에 저장되었는데, 익셉션이 발생해서 버퍼의 내용이 지워지고, 에러페이지의 내용이 출력
=>즉 버퍼에 167 1 저장 => 버퍼 꽉참 => 메세지 출력 => 다시 버퍼에 쌓으는 중 예외 발생 => 에러 페이지 출력

==>
버퍼가 플러시 된 이후에 익셉션이 발생하면 에러 페이지가 원하는 형태로 출력되지 않는다. 따라서
익셉션이 발생하기 전에 버퍼가 플러시 될 가능이 있다면, 버퍼 크기를 늘려서 에러가 발생하기 전에 버퍼가 플러시 되지 않도록
해야한다!

==>위의 예제에서 버퍼크기 늘리면
요청 처리 과정에서 에러가 발생하였습니다.
빠른 시간 내에 문제를 해결하도록 하겠습니다. 
에러 타입 : java.lang.ArithmeticException
 에러 메세지 :  / by zero 

숫자는 안나오고 에러 메세지만 나옴.



















