-----------CH2.웹프로그래밍 기초-----------------
//01. 웹과 웹 프로그래밍

1.1 URL과 웹페이지

URL (Uniform Resource Locator) : 웹 브라우저에 표시되는 것
웹 페이지(Web page) : 웹 브라우저에 출력 된 내용

-URL의 일반적인 구성

프로토콜 : 웹 브라우저가 서버와 내용을 주고받을 때 사용할 규칙 이름. 웹페이지의 주소를 표현할때는 http를 사용
서버 이름 : 웹 페이지를 요청할 서버의 이름을 지정. 서버이름은 11st.co.kr 과 같은 도메인 이름이나 180.70.134.239와 같은 IP주소입력 가능
경로 : 웹 페이지의 상세 주소에 해당한다. 즉 웹페이지마다 다른 경로를 갖는다.
쿼리 문자열 : 추가로 서버에 보내는 데이터에 해당한다. 같은 경로라 하더라도 입력한 값에 따라 다른 결과를 보여줘야 할 때 쿼리 문자열을 이용한다. 에를들어,
			검색 결과를 보여주는 페이지를 생각해보자. 이 페이지는 입력한 검색어에 따라 다른 내용이 표시되는데, 보통 쿼리 문자열을 이용해서 검색어를 전달
 ex)http://www.11st.co.kr/html/category/1.html?xzone=ctgr1^html
 http: 프로토콜
 :// 포로토콜과 나머지 부분을 구분하기 위해 사용
 www.11st.co.kr	서버이름
 /html/category 경로(컨텍스트 패스)
 /1.html 요청 URL 패턴
 xzone=ctgr1^html 쿼리 문자열
 
---------------------------------------------------------------------------------------------

1.2 웹 브라우저와 웹 서버

		DNS
		1.↑ ↓2.
	웹 브라우저 3.--> 웹 서버
				4.<--
			 
1.javacan.tistory.com의 ip 주소 요청
2.IP 주소 응답
3.http://javacan.tistory.com/390 요청
4.HTML 응답

cf)Client vs Server
Client : 요청하는 쪽
Server : 요청을 받아 알맞은 기능이나 데이터를 제공
(위의 예에서 웹 브라우저는 HTML 문서나 이미지 등을 요청 => Client
          웹 서버는 =>Server)
		  
		  
=>웹 서버 프로그램과 함께 동영상을 제공하는 스트리밍 서버 프로그램, 채팅 서버 프로그램 등등 사용할 수 있다
=>IP주소는 연결할 컴퓨터만 알 수 있어서 어떤 프로그램을 사용할 지 알수없다.
=>서버 프로그램은 클라언트가 연결할 때 다른 서버 프로그램과 구분할 수 있도록 포트(port)라는 것을 사용.

---------------------------------------------------------------------------------------------

//1.3 HTML과 HTTP

1)HTML(Hyper Text Markup Language)
사이트 연결해서 [소스 보기]메뉴 누르면 HTML 문서가 보임
=>렌더링(rendering) : HTML 표준에 따라 HTML 문서로부터 알맞은 화면을 생성

2)HTTP(HyperText Transfer Protocol)
;웹 브라우저와 웹 서버가 HTML을 비롯해 이미지,동영상,XML 문서 등 다양한 데이터를 주고받을 때 사용하는 일종의 규칙

-요청 규칙
 : 웹 브라우저가 웹 서버에 HTML과 같은 것을 요청할 때 사용할 데이터 구성 규칙
-응답 규칙
 : 웹 서버가 웹 브라우저에 HTML과 같은 것을 전송할 때 사용할 데이터 구성 규칙
 
=>요청/응답 데이터는 크게 '요청/응답 줄', '헤더','몸체' 세 개의 영역으로 구성
eg)
요청데이터
GET / HTTP /1.1 <<요청 줄
Host:www.daum.net <<헤더 이름 : Host , 헤더 값 : www.daum.net
몸체내용
응답데이터
HTTP/1.1 200 OK <<응답 줄 

=>
구성요소					요청데이터									응답데이터
요청/응답 줄 :	GET이나 POST와 같은 HTTP 요청 방식					요청에 대해 200이나 404같은 응답 코드를 전송.
			(method)과 요청하는 자원의 경로를 지정					(200은 요청을 정상적으로 처리)
			
헤더		  : 서버가 응답을 생성하는데 참조할 수 있는 정보를		응답에 대한 정보를 전송한다. 응답의 몸체가 어떤 데이터 인지,
			전송. (브라우저의 종류나 언어 등의 정보를 보냄)			길이는 어떻게 되는지 등에 대한 정보를 담는다.

몸체		  : 정보를 전송해야 할 때 사용한다.(파일 업로드와 		웹 브라우저가 요청한 자원의 내용을 담는다.
			같은 기능을 사용하면 몸체 영역에 파일을 담아 웹			HTML 문서나 이미지 파일 데이터 등이 몸체 영역을 이용해서 전달된다.
			서버에 전송한다.
			
---------------------------------------------------------------------------------------------

//1.4 정적 자원과 동적 자원

1)정적(Static) 페이지(정적 자원)
;URL의 경로와 일치하는 파일을 읽어와 응답으로 전송 => 파일이 바뀌지 않으면 늘 같은 응답 데이터를 받으므로 동일한 출력

2)정적(Dynamic) 페이지(동적 자원)
;파일(코드)를 바꾸지 않아도 조건에 따라 다른 응답 데이터를 전송하는 경우가 존재. i.e URL을 입력한 시점에 따라 다른 내용이 표시
(JSP를 비롯해 PHP,ASP.net 등 많은 웹 관련 기술들이 바로 동적 페이지를 만드는데 사용되는 프로그래밍 기술

---------------------------------------------------------------------------------------------

//1.5 웹 프로그래밍과 JSP

1)웹 프로그래밍
;웹 서버가 웹 브라우저에 응답으로 전송할 데이터를 생성해주는 프로그램을 작성하는 것.

2)JSP(Java Server Pages)
;동적 페이지를 작성하는데 사용되는 자바의 표준 기술로서 HTML 응답을 생성하는데 필요한 기능을 제공.
(HTML 응답뿐만 아니라 XML,JSON,바이너리 파일 등도 응답으로 생성할 수 있지만 HTML 응답을 생성하는 목적으로 JSP사용)

(웹 서버의 종류에 따라 웹 프로그래밍에 사용할 기술이 달라짐.
 아파치 웹 서버 => PHP 기술 // 윈도의 IIS 웹서버 => ASP.net 기술 사용)

웹 브라우저     --1.HTTP 요청--> WAS --2.실행--> JSP
				<--3.HTTP 응답전송


---------------------------------------------------------------------------------------------

//02 JSP 만들고 실행해보기

1.[톰캣폴더]\webapps\chap02 만들기
2.편집기 사용해서 time.jsp 파일 작성
3.톰캣 실행
4.웹 브라우저에 HTTP://localhost:8080/chap02/time.jsp 입력
5.실행 결과 확인

------------time.jsp-----------------------
<%@ page contentType="text/html; charset=UTF-8"%>
<html>
<head>
<title>현재 시간</title>
</head>
<body>
지금 : <%=new java.util.Date() %>
</body>
</html>

<%= %> ; 스크립트릿(scriptlet)이라는 jsp의 스크립트 요소 => 문자열로 생성


































