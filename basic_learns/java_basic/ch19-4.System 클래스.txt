-------------------ch19-4.System ???-----------------------
;??? JVM OS ???? ??? OS? ?? ??? ?? ??? ?? ????? ???.
java.lang.System ???? ???? ????? ?? ??? ??? ? ??
(?????? / ???? ?? /???? ?? / ??? ?? /?? ?? ?? / ??? ???? ?? /?? ?? ?? ?)
=>System ???? ?? ??? ???? static?? ??


-------------------------------------------------------------------------------------

//1.???? ?? ( exit() )
;?? ???? ?? ????? ?? ????? ?? // int ? ??? = ?? ?(????? ?? ??==0 )
=>exit(int status);? ???? ?? ???? checkExit() ???? ?? ??. => exit ???? status?? ??? ???? ??? ? ??

e.g)
public class Main {
	public static void main(String[] args){
		//?? ??? ??
		System.setSecurityManager(new SecurityManager(){
			@Override
			public void checkExit(int status){
				if(status!=5)
					throw new SecurityException();
			}			
		});
		
		//for?? ?? 0~9?? status ? ??
		for(int i=0;i<10;i++){
			//i? ??
			System.out.println(i);
			try{
				//JVM ?? ??
				System.exit(i);
			}catch(SecurityException e){}
		}		
	}		
}


<< ?? ?? >>
0
1
2
3
4
5




-------------------------------------------------------------------------------------

//2.??? ??? ??( gc() )

System.gc();
//??? ???? ??? ???, ?? ????? ????? ?? ??.(???? ??? ??? ????, ?? ????
???? ????? GC? ????? ??? ? ???!)

?? ??? ??? ???? ??? ??? ? ?? ??? ????? ?.
System.gc();				//???? ?? ???? ?? check & ??? ??? ??? ?? ??
System.runFinalization();	//check? ????? ????? ??


-------------------------------------------------------------------------------------

//3.?? ?? ?? ( currentTimeMillis(), nanoTime() )

??? ??? ?? ?? ??? ??? ?????(1/1000?) ??? ?????(1/10^9) ??? long ?? ??
=>? ??? ?? ???? ?? ?? ??? ???? ???

e.g) ???? ?? ?? ?? ???
public class Main {
	public static void main(String[] args){
		long startTime=System.nanoTime();
		
		int sum=0;
		for(int i=1;i<1000000;i++){
			sum+=i;
		}
		
		long endTime=System.nanoTime();
		System.out.println("1~1000000? ? : "+sum);
		System.out.println("?? ?? : "+(endTime-startTime)+" (?? ?)");		
		
	}		
}

<< ?? ?? >>
1~1000000? ? : 1783293664
?? ?? : 2746528 (?? ?)


-------------------------------------------------------------------------------------

//4.??? ???? ??( getProperty() )
:System property == JVM? ??? ? ?? ???? ???? ???
( ????? ?? ? ?? ????? ???? ??? ???, JVM ??, ?????? ???? ?? ?? ??? ? )

?(key)				??								?(value)
--------------------------------------------------------------------
java.version		??? ??							
java.home			???? JRE? ?? ??
os.name				Operating system name
file.separator		File separator("/" on Unix)
user.name			???? ??
user.home			???? ? ????
user.dir			???? ?? ?? ?? ???? ??


=>String value=System.getProperty(String key);

e.g) ??? ???? ??
import java.util.Properties;
import java.util.Set;

public class Main {
	public static void main(String[] args){
		
		//1.?? ?? ??
		String osName=System.getProperty("os.name");
		String userName=System.getProperty("user.name");
		String userHome=System.getProperty("user.home");
		
		System.out.println("???? ?? : "+osName);
		System.out.println("??? ?? : "+userName);
		System.out.println("??? ? ???? : "+userHome);
		
		System.out.println("-----------------");
		System.out.println("[key] value");
		System.out.println("-----------------");
		
		//2.?? ??? ?? ? ??
		Properties props=System.getProperties();
		Set keys=props.keySet();
		for(Object objKey : keys){
			String key=(String)objKey;
			String value=System.getProperty(key);
			System.out.println("["+key+"]\t"+value);
		}	
	}		
}

=>??? key ? value??

-------------------------------------------------------------------------------------

//5.?? ?? ?? ( getenv() )

public class Main {
	public static void main(String[] args){
		String javaHome=System.getenv("JAVA_HOME");
		System.out.println("JAVA_HOME : "+javaHome);		
	}		
}


<< ?? ?? >>
JAVA_HOME : C:\Program Files\Java\jdk1.8.0_101



-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------





































