/*
 *	Banking System Ver 0.5
 *	작성자	: 김명수
 *	내용		: AccountHandler라는 이름의 컨트롤 클래스 정의
 */

#include <iostream>
#include <cstring>
#include <Windows.h>

#define MAXACC 100
using std::cout; using std::endl; using std::cin;

const int NAME_LEN = 20;

enum {MAKE=1,DEPOSIT,WITHDRAW,INQUIRE,EXIT};

/*
*	클래스 이름: Account
*	클래스 유형:	Entity 클래스
*/
class Account
{
private:
	const int accID;
	int balance;
	char *cusName;
public:
	Account(int ID, int money, char *name);		//생성자	
	Account::Account(const Account &copy);		//깊은 복사 디폴트 생성자

	int GetAccID() const;
	void DepositMoney(int money);
	int WithdrawMoney(int money);
	void ShowAccInfo();
	~Account();
};

Account::Account(int ID, int money, char *name)
	:accID(ID), balance(money)
{
	cusName = new char[strlen(name) + 1];
	strcpy(cusName, name);
}

Account::Account(const Account &copy)
	:accID(copy.accID), balance(copy.balance)
{
	cusName = new char[strlen(copy.cusName) + 1];
	strcpy(cusName, copy.cusName);
}
int Account::GetAccID() const
{
	return accID;
}

void Account::DepositMoney(int money)
{
	if (money < 0) {
		cout << "0원보다 큰 금액을 입력해주세요." << endl;
		return;
	}
	balance += money;
	cout << "입금 완료" << endl;
}

int Account::WithdrawMoney(int money)
{
	if (money < 0) {
		cout << "0원보다 큰 금액을 입력해주세요." << endl;
		return 0;
	}
	else if (money > balance) {
		cout << "잔액이 부족합니다." << endl;
		return 0;
	}
	balance -= money;
	cout << "출금 완료" << endl;
	return money;
}

void Account::ShowAccInfo()
{
	cout << "계좌 ID : " << accID << endl;
	cout << "이   름 : " << cusName << endl;
	cout << "잔   액 : " << balance << endl;
}

Account::~Account()
{
	delete[]cusName;
}


/*
*	클래스 이름:	AccountHandler
*	클래스 유형:	컨트롤(Control) 클래스
*/

class AccountHandler
{
private:
	Account * accArr[MAXACC];
	int accNum;
public:
	AccountHandler();
	void ShowMenu(void) const;
	void MakeAccount();
	void DepositMoney(void);
	void WithdrawMoney(void);
	void ShowAllAccountInfor();
	~AccountHandler();
};

AccountHandler::AccountHandler()
	:accNum(0) {}

void AccountHandler::ShowMenu(void) const
{
	cout << "-----Menu------" << endl;
	cout << "1. 계좌개설" << endl;
	cout << "2. 입  금" << endl;
	cout << "3  출  금" << endl;
	cout << "4. 계좌정보 전체 출력" << endl;
	cout << "5. 프로그램 종료" << endl;
	cout << "선택: ";
}

void AccountHandler::MakeAccount()
{
	int id;
	char name[NAME_LEN];
	int balance;

	cout << "계좌ID : "; cin >> id;
	cout << "이름 : "; cin >> name;
	cout << "입금액 :"; cin >> balance;

	accArr[accNum++] = new Account(id, balance,name);
}

void AccountHandler::DepositMoney(void)
{
	int money;
	int id;
	cout << "[입   금]" << endl;
	cout << "계좌ID : "; cin >> id;
	cout << "입금액 :"; cin >> money;

	for (int i = 0; i < accNum; i++) {
		if (accArr[i]->GetAccID() == id) {
			accArr[i]->DepositMoney(money);
			cout << "입금 완료" << endl;
			return;
		}	
	}
	cout << "유효하지 않은 ID 입니다." << endl << endl;
}

void AccountHandler::WithdrawMoney(void)
{
	int money;
	int id;
	cout << "[출   금]" << endl;
	cout << "계좌ID : "; cin >> id;
	cout << "출금액 :"; cin >> money;
	
	for (int i = 0; i < accNum; i++) {
		if (accArr[i]->GetAccID()==id) {
			if (accArr[i]->WithdrawMoney(money) == 0)
			{
				cout << "잔액 부족" << endl << endl;
				return;
			}
			cout << "출금완료" << endl;
			return;			
		}
	}
	cout << "유효하지 않은 ID 입니다." << endl << endl;
}

void AccountHandler::ShowAllAccountInfor()
{
	for (int i = 0; i < accNum; i++) {
		accArr[i]->ShowAccInfo();
		cout << endl;
	}
}

AccountHandler::~AccountHandler()
{

	for (int i = 0; i < accNum; i++) {
		delete accArr[i];
	}
}


/*
*	컨트롤 클래스 AccountHandler 중심으로 변경된 main 함수
*/


int main(void)
{
	AccountHandler manager;
	int choice;

	while (1)
	{
		manager.ShowMenu();
		cout << "선택 : "; cin >> choice; cout << endl;

		switch (choice)
		{
		case MAKE:
			manager.MakeAccount();
			break;
		case DEPOSIT:
			manager.DepositMoney();
			break;
		case WITHDRAW:
			manager.WithdrawMoney();
			break;
		case INQUIRE:
			manager.ShowAllAccountInfor();
			break;
		case EXIT:
			return 0;
		default:
			cout << "Illegal selection.." << endl;
		}
		system("pause");
		system("cls");
	}	
	return 0;
}



